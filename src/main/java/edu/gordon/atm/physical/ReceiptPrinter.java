/* * ATM Example system - file ReceiptPrinter.java * * copyright (c) 2001 - Russell C. Bjork * */ package edu.gordon.atm.physical;import java.util.Enumeration;import org.omg.CORBA.portable.ApplicationException;import com.google.common.eventbus.EventBus;import edu.gordon.atm.physical.event.PrintReceiptLineEvent;import edu.gordon.banking.Receipt;/** Manager for the ATM's receipt printer.  In a real ATM, this would  *  manage a physical device; in this edu.gordon.simulation,  it uses classes  *  in package edu.gordon.simulation to simulate the device. */ public class ReceiptPrinter{    /** Constructor     */    public ReceiptPrinter()    {     }        /** Print a receipt     *     *  @param receipt object containing the information to be printed     */    @SuppressWarnings("rawtypes")	public void printReceipt(Receipt receipt)    {        Enumeration receiptLines = receipt.getLines();                // Animate the printing of the receipt        while (receiptLines.hasMoreElements())        {        	//listener.ListenPrintReceiptLine((String) receiptLines.nextElement());        	if (eventBus != null)        	{            	eventBus.post(new PrintReceiptLineEvent((String) receiptLines.nextElement()));	        	}        	else        	{        		try {throw new ApplicationException("EventBus is null!", null);}         		catch (ApplicationException e) {e.printStackTrace();}        	}        }    }        private EventBus eventBus;    	public void setEventBus(EventBus eventBus) 	{		this.eventBus = eventBus;	}}