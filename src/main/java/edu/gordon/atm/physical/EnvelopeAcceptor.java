/* * ATM Example system - file EnvelopeAcceptor.java * * copyright (c) 2001 - Russell C. Bjork * */ package edu.gordon.atm.physical;import com.google.common.eventbus.EventBus;import edu.gordon.pubsub.upper.AcceptEnvelopeComponent;import edu.gordon.pubsub.upper.AcceptEnvelopeEvent;/** Manager for the ATM's envelope acceptor.  In a real ATM, this would  *  manage a physical device; in this edu.gordon.simulation,  it uses classes  *  in package edu.gordon.simulation to simulate the device. */ public class EnvelopeAcceptor{	private EventBus eventBus;	    /** Constructor     *     *  @param log the log in which to record receiving an envelope     */    public EnvelopeAcceptor(Log log)    {        EnvelopeAcceptor.log = log;        eventBus = new EventBus();    	eventBus.register(new AcceptEnvelopeComponent());    }        /** Accept an envelope from customer.     *     *  @exception CustomerConsole.Cancelled if operation timed out or the     *             customer cancelled it     */    public void acceptEnvelope() throws CustomerConsole.Cancelled    {    	    	eventBus.post(new AcceptEnvelopeEvent(""));        /*boolean inserted = listener.ListenAcceptEnvelope();        if (inserted)            log.logEnvelopeAccepted();        else            throw new CustomerConsole.Cancelled();*/    }    	public static void receiveEnvelope(String response) throws CustomerConsole.Cancelled	{		boolean inserted = Boolean.parseBoolean(response);		//boolean inserted = listener.ListenAcceptEnvelope();        if (inserted)            log.logEnvelopeAccepted();        else            throw new CustomerConsole.Cancelled();			}	    /** Log in which to record receiving an envelope     */    private static Log log;}